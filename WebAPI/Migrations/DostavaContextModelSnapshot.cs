// <auto-generated />
using System;
using WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Matija_Milutinovic___projekat.Migrations
{
    [DbContext(typeof(DostavaContext))]
    partial class DostavaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.Dostava", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ime");

                    b.HasKey("ID");

                    b.ToTable("Dostava");
                });

            modelBuilder.Entity("WebAPI.Models.Proizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int")
                        .HasColumnName("Cena");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ime");

                    b.Property<int?>("RestoranID")
                        .HasColumnType("int");

                    b.Property<string>("Sastojci")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RestoranID");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("WebAPI.Models.Restoran", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DostavaID")
                        .HasColumnType("int");

                    b.Property<string>("Filter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Filter");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ime");

                    b.HasKey("ID");

                    b.HasIndex("DostavaID");

                    b.ToTable("Restoran");
                });

            modelBuilder.Entity("WebAPI.Models.Proizvod", b =>
                {
                    b.HasOne("WebAPI.Models.Restoran", "Restoran")
                        .WithMany("Proizvodi")
                        .HasForeignKey("RestoranID");

                    b.Navigation("Restoran");
                });

            modelBuilder.Entity("WebAPI.Models.Restoran", b =>
                {
                    b.HasOne("WebAPI.Models.Dostava", "Dostava")
                        .WithMany("Restorani")
                        .HasForeignKey("DostavaID");

                    b.Navigation("Dostava");
                });

            modelBuilder.Entity("WebAPI.Models.Dostava", b =>
                {
                    b.Navigation("Restorani");
                });

            modelBuilder.Entity("WebAPI.Models.Restoran", b =>
                {
                    b.Navigation("Proizvodi");
                });
#pragma warning restore 612, 618
        }
    }
}
